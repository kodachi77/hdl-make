########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := gate
PROJECT := gate
PROJECT_FILE := $(PROJECT).prjx
TOOL_PATH := 
TCL_INTERPRETER := libero SCRIPT:
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := 
SYN_DEVICE := anfpga
SYN_PACKAGE := ff
SYN_GRADE := 3

TCL_CREATE := new_project -location {./gate} -name {gate} -hdl {VHDL} -family {ProASIC3} -die {ANFPGA} -package {FF} -speed {3} -die_voltage {1.5}
TCL_OPEN := open_project -file {$(PROJECT)/$(PROJECT_FILE)}
TCL_SAVE := save_project
TCL_CLOSE := close_project
ifneq ($(wildcard $(PROJECT_FILE)),)
TCL_CREATE := $(TCL_OPEN)
endif

#target for performing local synthesis
all: bitstream

SOURCES_VHDLFile := \
../files/gate.vhdl

SOURCES_SDCFile := \
syn.sdc

SOURCES_PDCFile := \
comp.pdc

files.tcl:
		@$(foreach sourcefile, $(SOURCES_VHDLFile), echo "create_links -hdl_source $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_SDCFile), echo "create_links -sdc $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_PDCFile), echo "create_links -pdc $(sourcefile)" >> $@ &)

SYN_PRE_PROJECT_CMD := 
SYN_POST_PROJECT_CMD := 

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

project.tcl:
		echo $(TCL_CREATE) >> $@
		echo source files.tcl >> $@
		echo organize_tool_files -tool {SYNTHESIZE} -file {syn.sdc} -module {$(TOP_MODULE)::work} -input_type {constraint} >> $@
		echo organize_tool_files -tool {COMPILE} -file {comp.pdc} -file {syn.sdc} -module {$(TOP_MODULE)::work} -input_type {constraint} >> $@
		echo set_root -module {$(TOP_MODULE)::work} >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

project: files.tcl project.tcl
		$(SYN_PRE_PROJECT_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_PROJECT_CMD)
		touch $@

bitstream.tcl:
		echo $(TCL_OPEN) >> $@
		echo update_and_run_tool -name {GENERATEPROGRAMMINGDATA} >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

bitstream: project bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) $(PROJECT)

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf project synthesize translate map par bitstream
		rm -rf project.tcl synthesize.tcl translate.tcl map.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf *.pdb *.stp

.PHONY: mrproper clean all
